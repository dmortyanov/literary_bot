from aiogram import types
from aiogram.filters import Command
from core.database import Session, User
from core.config import ROLES
from core.utils import check_role, split_text, get_owner_info

async def init_owner(message: types.Message):
    session = Session()
    try:
        owner = session.query(User).filter_by(role='owner').first()
        if owner:
            await message.reply("–í–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω.")
            return
        
        user = User(user_id=message.from_user.id, role='owner')
        session.add(user)
        session.commit()
        await message.reply("–í—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–æ—Ç–∞.")
    finally:
        session.close()

async def list_users(message: types.Message):
    if not await check_role(message.from_user.id, 'owner'):
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return
    
    session = Session()
    try:
        users = session.query(User).all()
        if not users:
            await message.reply("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
            return
        
        text = "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
        for user in users:
            try:
                user_info = await message.bot.get_chat(user.user_id)
                username = f"@{user_info.username}" if user_info.username else f"id{user.user_id}"
                name = user_info.full_name
            except:
                username = f"id{user.user_id}"
                name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            
            text += (
                f"‚Ä¢ {name} ({username})\n"
                f"  –†–æ–ª—å: {ROLES.get(user.role, user.role)}\n"
                f"  ID: {user.user_id}\n"
                f"  –î–ª—è –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏: /setrole {user.user_id} <—Ä–æ–ª—å>\n\n"
            )
        
        text += (
            "üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏:\n"
            "‚Ä¢ reader - —á–∏—Ç–∞—Ç–µ–ª—å\n"
            "‚Ä¢ author - –∞–≤—Ç–æ—Ä\n"
            "‚Ä¢ moderator - –º–æ–¥–µ—Ä–∞—Ç–æ—Ä\n"
            "‚Ä¢ banned - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π\n\n"
            "–ü—Ä–∏–º–µ—Ä: /setrole 123456789 author"
        )
        
        for part in split_text(text):
            await message.answer(part)
            
    finally:
        session.close()

async def set_user_role(message: types.Message):
    if not await check_role(message.from_user.id, 'owner'):
        await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    try:
        parts = message.text.split()
        if len(parts) != 3:
            await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /setrole <user_id/username> <role>")
            return
        
        _, user_identifier, role = parts
        
        if role not in ROLES:
            await message.reply(f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏: {', '.join(ROLES.keys())}")
            return
            
        session = Session()
        try:
            if user_identifier.startswith('@'):
                username = user_identifier[1:]
                try:
                    user_info = await message.bot.get_chat(username)
                    user_id = user_info.id
                except:
                    await message.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
            else:
                try:
                    user_id = int(user_identifier)
                except ValueError:
                    await message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                    return
            
            user = session.query(User).filter_by(user_id=user_id).first()
            if not user:
                user = User(user_id=user_id, role=role)
                session.add(user)
            else:
                user.role = role
            session.commit()
            
            await message.reply(f"–†–æ–ª—å {ROLES[role]} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
            
            # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–≥–æ, –∫–æ–º—É –Ω–∞–∑–Ω–∞—á–∏–ª–∏ —Ä–æ–ª—å
            try:
                if role == 'banned':
                    notification = f"‚õîÔ∏è –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ."
                else:
                    notification = f"üîÑ –í–∞—à–∞ —Ä–æ–ª—å –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {ROLES[role]}"
                await message.bot.send_message(user_id, notification)
            except:
                pass
            
        finally:
            session.close()
            
    except Exception as e:
        await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")